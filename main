--[[ Hello Kitty Auto Mission Completer Script with Draggable GUI ]]--

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HelloKittyAutoFarm"
screenGui.Parent = playerGui

-- Create the Main GUI
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 450)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -225)  -- Initially centered position
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 182, 193)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)  -- Centered by default

-- Make the GUI draggable
local dragging = false
local dragInput, dragStart, startPos

-- Function to handle dragging logic
mainFrame.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    -- Check if the mouse button is pressed on the frame
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

mainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Add the title
local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Hello Kitty Auto Mission üéÄ"
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.BackgroundColor3 = Color3.fromRGB(255, 182, 193)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Parent = mainFrame

-- Create the Start Button
local startButton = Instance.new("TextButton")
startButton.Size = UDim2.new(0, 280, 0, 50)
startButton.Position = UDim2.new(0.5, -140, 0.3, 0)
startButton.Text = "Start Auto Mission üéÄ"
startButton.Font = Enum.Font.GothamBold
startButton.TextSize = 16
startButton.TextColor3 = Color3.fromRGB(255, 255, 255)
startButton.BackgroundColor3 = Color3.fromRGB(255, 105, 180)
startButton.Parent = mainFrame

-- Create the Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 280, 0, 50)
stopButton.Position = UDim2.new(0.5, -140, 0.6, 0)
stopButton.Text = "Stop Auto Mission ‚ùå"
stopButton.Font = Enum.Font.GothamBold
stopButton.TextSize = 16
stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopButton.BackgroundColor3 = Color3.fromRGB(255, 105, 180)
stopButton.Parent = mainFrame

-- Create the Spam Trade Request Button
local spamTradeButton = Instance.new("TextButton")
spamTradeButton.Size = UDim2.new(0, 280, 0, 50)
spamTradeButton.Position = UDim2.new(0.5, -140, 0.45, 0)
spamTradeButton.Text = "Spam Trade Request üéÅ"
spamTradeButton.Font = Enum.Font.GothamBold
spamTradeButton.TextSize = 16
spamTradeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
spamTradeButton.BackgroundColor3 = Color3.fromRGB(255, 105, 180)
spamTradeButton.Parent = mainFrame

-- Create the Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0, 30)
statusLabel.Position = UDim2.new(0.5, -140, 0.9, 0)
statusLabel.Text = "Status: Idle üò¥"
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 182, 193)
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 14
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Parent = mainFrame

-- Remote Events
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local BlowBubbleEvent = Remotes:WaitForChild("BlowBubble")
local HatchEggEvent = ReplicatedStorage:WaitForChild("HatchEgg")

-- Mission Detection and Completer
local farming = false  -- Track if mission is active

local function teleportToEgg(eggPosition)
    -- Teleport the player to the egg position
    local char = player.Character
    if char then
        local humanoidRootPart = char:WaitForChild("HumanoidRootPart")
        humanoidRootPart.CFrame = eggPosition
    end
end

local function autoCompleteMission()
    print("Auto mission started!")  -- Debugging
    statusLabel.Text = "Status: Auto Farming üéÄ"
    farming = true

    while farming do
        print("Checking mission...")  -- Debugging
        local missionText = "unknown"
        
        if missionLabel then
            missionText = missionLabel.Text:lower()
        end
        
        print("Mission detected: " .. missionText)  -- Debugging

        if string.find(missionText, "bubble") then
            print("üéà Blowing bubble...")  -- Debugging
            if BlowBubbleEvent then
                BlowBubbleEvent:FireServer()
            end
        elseif string.find(missionText, "hatch") then
            print("ü•ö Hatching egg...")  -- Debugging
            -- Detect which egg is required by analyzing the mission description
            local eggRequired = "BasicEgg"  -- Replace with dynamic detection logic if needed
            local eggPosition = workspace:FindFirstChild("Eggs"):FindFirstChild(eggRequired) -- Example logic to get egg position

            if eggPosition then
                teleportToEgg(eggPosition.Position)  -- Teleport player to egg
                -- Simulate the "R" key press for auto-hatching
                local userInputService = game:GetService("UserInputService")
                userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
                    if gameProcessedEvent then return end
                    if input.KeyCode == Enum.KeyCode.R then
                        HatchEggEvent:FireServer(eggRequired)
                        print("Egg hatched successfully!")
                    end
                end)
            else
                print("Egg not found!")  -- Debugging if egg is not found
            end
        else
            print("üí§ No valid mission found.")  -- Debugging
        end

        task.wait(3)  -- Wait 3 seconds before checking again
    end

    statusLabel.Text = "Status: Idle üò¥"
    print("Auto mission stopped.")  -- Debugging
end

local function stopFarming()
    print("Stopping mission...")  -- Debugging
    farming = false
    statusLabel.Text = "Status: Stopped ‚ùå"
end

local function spamTradeRequest()
    print("Spam trade requests started!")  -- Debugging
    local targetPlayer = Players:FindFirstChild("BGS_AAA")
    
    if targetPlayer then
        while true do
            print("Sending trade request to BGS_AAA")  -- Debugging
            player:RequestTrade(targetPlayer)
            task.wait(1)  -- Wait 1 second before sending another trade request
        end
    else
        print("Player BGS_AAA not found!")  -- Debugging if the player is not found
    end
end

-- Button Actions
startButton.MouseButton1Click:Connect(function()
    print("Start button clicked")  -- Debugging
    autoCompleteMission()
end)

stopButton.MouseButton1Click:Connect(function()
    print("Stop button clicked")  -- Debugging
    stopFarming()
    screenGui:Destroy()  -- This will remove the GUI and stop the script
end)

spamTradeButton.MouseButton1Click:Connect(function()
    print("Spam trade button clicked")  -- Debugging
    spamTradeRequest()  -- Start sending trade requests
end)

print("Hello Kitty Auto Mission Script Loaded! üéÄ")

